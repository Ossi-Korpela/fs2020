{"version":3,"sources":["services/puhelinluettelo.js","index.js"],"names":["baseUrl","expObj","getAll","axios","get","then","response","data","create","newPerson","post","remove","toBeRemoved","delete","update","id","newObject","put","RemoveButton","props","person","removePerson","onClick","Display","persons","filterValue","filter","name","toLowerCase","match","map","number","Filter","handleFilterChange","value","onChange","PersonForm","addPerson","handlePersonChange","handleNumberChange","newName","newNumber","onSubmit","type","ErrorNotification","message","className","Notification","App","useState","setPersons","setNewName","setNewNumber","setFilterValue","errorMessage","setErrorMessage","setMessage","useEffect","phoneService","initialContacts","catch","error","setTimeout","event","console","log","target","preventDefault","nam","length","window","confirm","oldPerson","updatedPerson","returnedPerson","per","nameObject","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cf8e70a.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create =  (newPerson) => {\r\n    const request =  axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (toBeRemoved) => {\r\n    const request = axios.delete(`${baseUrl}/${toBeRemoved}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst expObj = {\r\n    getAll : getAll,\r\n    create : create,\r\n    remove : remove,\r\n    update : update\r\n}\r\n\r\nexport default expObj","import React, { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport phoneService from './services/puhelinluettelo'\r\nimport './index.css'\r\n\r\n\r\n\r\n\r\nconst RemoveButton = (props) => {\r\n  const {person, removePerson} = props  \r\n  return(\r\n    <button onClick={() => removePerson(person)}>delete</button>\r\n  )\r\n}\r\n\r\n\r\nconst Display = (props) => {  \r\n  let {persons, filterValue, removePerson} = props\r\n  if(filterValue !== ''){\r\n    persons = persons.filter(person => person.name.toLowerCase().match(filterValue.toLowerCase()))\r\n  }\r\n  \r\n  return(\r\n    <div>\r\n      {persons.map( person => \r\n        <p key={person.id}>{person.name} {person.number} <RemoveButton \r\n                                                            person={person}\r\n                                                            removePerson={removePerson}/> </p>\r\n        )}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst Filter = (props) => {\r\n  const handleFilterChange = props.handleFilterChange\r\n  const filterValue = props.filterValue\r\n  return(\r\n    <form>\r\n        <div>\r\n          filter shown with <input value={filterValue}\r\n                                   onChange = {handleFilterChange}/>\r\n        </div>\r\n      </form>\r\n  )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n  const addPerson = props.addPerson\r\n  const handlePersonChange = props.handlePersonChange\r\n  const handleNumberChange = props.handleNumberChange\r\n  const newName = props.newName\r\n  const newNumber = props.newNumber\r\n  \r\n\r\n    return(\r\n      <form onSubmit={addPerson}>\r\n            <div>name: <input \r\n                      value={newName}\r\n                      onChange={handlePersonChange}/>\r\n            </div>\r\n            <div>number: <input \r\n                            value={newNumber}\r\n                            onChange={handleNumberChange}/>\r\n\r\n            </div>\r\n            <div>\r\n              <button type=\"submit\">add</button>\r\n            </div>\r\n          </form>\r\n    )\r\n}\r\n\r\nconst ErrorNotification = ({ message }) => {\r\n  if (message === '') {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Notification = ({message}) => {\r\n  if(message === null){\r\n    return null\r\n  }\r\n  return(\r\n    <div className=\"msg\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber] = useState('')\r\n  const [ filterValue, setFilterValue] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    phoneService\r\n      .getAll()\r\n      .then(initialContacts => {\r\n        setPersons(initialContacts)\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(`unable to retrieve data from server`)\r\n        setTimeout(() => {setErrorMessage('')}, 3000)\r\n      }) \r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    if(persons.filter(nam => nam.name === newName).length > 0){\r\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n        const oldPerson = persons.filter(nam => {return nam.name === newName})[0]\r\n        const updatedPerson = {\r\n          name : newName,\r\n          number : newNumber,\r\n          id : oldPerson.id\r\n        }\r\n        phoneService\r\n          .update(oldPerson.id, updatedPerson)\r\n          .then(returnedPerson => {\r\n            console.log(returnedPerson)\r\n            setPersons(persons.map(per => per.id !== oldPerson.id ? per : returnedPerson))\r\n            setMessage(`Changed the number of ${oldPerson.name} succesfully`)\r\n            setTimeout(() => {setMessage(null)}, 3000)\r\n\r\n          })\r\n          .catch(error => {\r\n            setErrorMessage(`Information of ${oldPerson.name} has already been removed from the server`)\r\n            setPersons(persons.filter(per => per.id !== oldPerson.id))\r\n            setTimeout(() => {setErrorMessage('')}, 3000)\r\n          }) \r\n        \r\n      }            \r\n    }\r\n    else{\r\n      \r\n      const nameObject = {\r\n        name: newName,\r\n        number: newNumber\r\n      }\r\n      \r\n      phoneService\r\n        .create(nameObject)\r\n        .then(returnedPerson => {\r\n          setPersons(persons.concat(returnedPerson))\r\n          setMessage(`Added ${nameObject.name}`)\r\n          setTimeout(() => {setMessage(null)}, 3000)\r\n\r\n          \r\n        })\r\n        .catch(error => {\r\n          setErrorMessage('Error validating new data')\r\n          setTimeout(() => {setErrorMessage('')}, 3000)\r\n        })      \r\n    }\r\n    \r\n    setNewName('')\r\n    setNewNumber('')\r\n  }\r\n\r\n  const removePerson = person => {\r\n    if(window.confirm(`delete ${person.name}?`)){\r\n      phoneService\r\n        .remove(person.id)\r\n        .then(response => {\r\n          setPersons(persons.filter(per => per.id !== person.id))\r\n          setMessage(`Removed ${person.name}`)\r\n          setTimeout(() => {setMessage(null)}, 3000)\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(`Person ${newName} was already removed`)\r\n          setPersons(persons.filter(per => per.id !== person.id))\r\n          setTimeout(() => {setErrorMessage('')}, 3000)\r\n        }) \r\n    }\r\n  }  \r\n  \r\n\r\n  const handlePersonChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    console.log(event.target.value)\r\n    setFilterValue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <ErrorNotification message={errorMessage} />\r\n      <Notification message={message}/>      \r\n      <Filter handleFilterChange={handleFilterChange}\r\n              filterValue = {filterValue}/>\r\n      <h3>add a new</h3>\r\n      <PersonForm\r\n        addPerson={addPerson}\r\n        handlePersonChange={handlePersonChange}\r\n        handleNumberChange={handleNumberChange}\r\n        newNumber = {newNumber}\r\n        newName = {newName}     \r\n      />\r\n      <h3>Numbers</h3>\r\n      <Display persons={persons} \r\n               filterValue={filterValue}\r\n               removePerson={removePerson}\r\n               />\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}